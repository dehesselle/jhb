# SPDX-FileCopyrightText: 2022 Ren√© de Hesselle <dehesselle@web.de>
#
# SPDX-License-Identifier: GPL-2.0-or-later

variables:
  GIT_DEPTH: 1
  GIT_SUBMODULE_STRATEGY: recursive
  WRK_DIR: /Users/Shared/work
  CCACHE_DIR: /Users/Shared/work/ccache

stages:
  - build
  - release

include:
  - remote: https://raw.githubusercontent.com/dehesselle/sdkchecksum/master/.gitlab-ci/verify_sdk-template.yml

#------------------------------------------------------------------------- build

build:
  stage: build
  parallel:
    matrix:
      - RUNNER: [ "macosintel", "macosarm" ]
  rules:
    - if: $RUNNER == "macosintel"
      variables:
        SDKROOT: /opt/sdks/MacOSX10.13.4.sdk
    - if: $RUNNER == "macosarm"
      variables:
        SDKROOT: /opt/sdks/MacOSX11.3.sdk
  variables:
    FORCE_BUILD_FROM_SOURCE: "true"
  tags:
    - ${RUNNER}
  script:
    - !reference [ .verify_sdk, script ]
    - usr/bin/bootstrap
    - usr/bin/archive remove_nonessentials
    - usr/bin/archive create_tar
  after_script:
    # For persistent runners: cleanup afterwards.
    - |
      source etc/jhb.conf.sh
      rm -rf $VER_DIR
  artifacts:
    paths:
      - jhb-*.tar.xz

#----------------------------------------------------------------------- release

release:upload:
  stage: release
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+/
  needs:
    - build
  variables:
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}"
  script:
    - |
      for ARTIFACT in jhb-*.tar.xz; do
        curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${ARTIFACT} ${PACKAGE_REGISTRY_URL}/${ARTIFACT}
      done

release:publish:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+/
  needs:
    - build
    - release:upload
  variables:
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}"
  script:
    - |
      {
        echo -n "release-cli create --name $CI_COMMIT_TAG --tag-name $CI_COMMIT_TAG "
        for ARTIFACT in jhb-*.tar.xz; do
          echo -n "--assets-link '{\"name\":\"${ARTIFACT}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${ARTIFACT}\"}' "
        done
      } > create_release.sh
      chmod 755 create_release.sh
      ./create_release.sh
