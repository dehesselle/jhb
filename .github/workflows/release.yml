# SPDX-FileCopyrightText: 2021 Ren√© de Hesselle <dehesselle@web.de>
#
# SPDX-License-Identifier: GPL-2.0-or-later

name: release
on:
  push:   # only run for tags
    tags:
      - 'v*'

# This workflow is meant to create releases. It checks some basic requirements
# and then calls the 'build' workflow to do the work. Afterwards a release
# is drafted with the produced artifact.

jobs:

################################################################################

  check_prerequisites:
    runs-on: macos-12
    steps:

      - name: Checkout jhb repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Fail on missing version tag
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/github-script@v7
        with:
          script: core.setFailed("version tag not found")

      - name: Get jhb version
        id: jhb
        env:
          SYS_IGNORE_USR_LOCAL: true
        run: |
          source etc/jhb.conf.d/version.sh
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Once we have established that the jhb version (version.sh)
      # matches the git tag we can safely rely on the tag from here on.
      - name: Fail on version mismatch
        if: ${{ !endsWith(github.ref, steps.jhb.outputs.version) }}
        uses: actions/github-script@v7
        with:
          script: core.setFailed("version tag mismatch")

################################################################################

  build_jhb:
    uses: ./.github/workflows/build.yml
    with:
      SDK_DOWNLOAD_URL_REQUIRED: true
    secrets:
      SDK_DOWNLOAD_URL: ${{ secrets.SDK_DOWNLOAD_URL }}
    needs: check_prerequisites

################################################################################

  create_release:
    runs-on: ubuntu-latest
    needs: build_jhb
    steps:

      - name: Download jhb archive
        uses: actions/download-artifact@v4
        with:
          name: jhb

      - name: create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: jhb*.tar.xz
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
